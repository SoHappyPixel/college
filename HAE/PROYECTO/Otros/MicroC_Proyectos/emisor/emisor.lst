;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26/04/2016 11:15:18
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF5C  	GOTO        184
_interrupt:
;emisor.c,6 :: 		void interrupt()
0x0008	0xF015C000  	MOVFF       R0, 21
;emisor.c,8 :: 		if(INTCON.RBIF == 1 )
0x000C	0xA0F2      	BTFSS       INTCON, 0 
0x000E	0xD017      	BRA         L_interrupt0
;emisor.c,10 :: 		x = PORTB; // RBIF exige antes leer PORTB.
0x0010	0xF017CF81  	MOVFF       PORTB, _x
;emisor.c,11 :: 		flag = ~flag; // Control entrada low/high.
0x0014	0x1C16      	COMF        _flag, 0 
0x0016	0x6E00      	MOVWF       R0 
0x0018	0xF016C000  	MOVFF       R0, _flag
;emisor.c,12 :: 		INTCON.RBIF = 0; // Se apaga la interrupción.
0x001C	0x90F2      	BCF         INTCON, 0 
;emisor.c,15 :: 		if(flag)
0x001E	0x5200      	MOVF        R0, 1 
0x0020	0xE004      	BZ          L_interrupt1
;emisor.c,17 :: 		T0CON = 0x90; // Se enciende el timer.
0x0022	0x0E90      	MOVLW       144
0x0024	0x6ED5      	MOVWF       T0CON 
;emisor.c,18 :: 		TMR0H = 0; // Valor high para el alfa del timer.
0x0026	0x6AD7      	CLRF        TMR0H 
;emisor.c,19 :: 		TMR0L = 0; // Valor low para el alfa del timer.
0x0028	0x6AD6      	CLRF        TMR0L 
;emisor.c,20 :: 		}
L_interrupt1:
;emisor.c,23 :: 		if(!flag)
0x002A	0x5216      	MOVF        _flag, 1 
0x002C	0xE108      	BNZ         L_interrupt2
;emisor.c,25 :: 		T0CON = 0x10; // Se apaga el timer.
0x002E	0x0E10      	MOVLW       16
0x0030	0x6ED5      	MOVWF       T0CON 
;emisor.c,26 :: 		UART1_Write(TMR0L); // Envio TMR0L via UART.
0x0032	0xF028CFD6  	MOVFF       TMR0L, FARG_UART1_Write_data_
0x0036	0xD831      	RCALL       _UART1_Write
;emisor.c,27 :: 		UART1_Write(TMR0H); // Envio TMR0H via UART.
0x0038	0xF028CFD7  	MOVFF       TMR0H, FARG_UART1_Write_data_
0x003C	0xD82E      	RCALL       _UART1_Write
;emisor.c,28 :: 		}
L_interrupt2:
;emisor.c,29 :: 		}
L_interrupt0:
;emisor.c,30 :: 		}
L_end_interrupt:
L__interrupt9:
0x003E	0xF000C015  	MOVFF       21, R0
0x0042	0x0011      	RETFIE      1
; end of _interrupt
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0044	0x0E9A      	MOVLW       _UART1_Write
0x0046	0x6E20      	MOVWF       _UART_Wr_Ptr 
0x0048	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x004A	0x6E21      	MOVWF       _UART_Wr_Ptr+1 
0x004C	0x0E28      	MOVLW       FARG_UART1_Write_data_
0x004E	0x6E22      	MOVWF       _UART_Wr_Ptr+2 
0x0050	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0052	0x6E23      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67.c,19 :: 		
0x0054	0x0EFF      	MOVLW       _UART1_Read
0x0056	0x6E1C      	MOVWF       _UART_Rd_Ptr 
0x0058	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x005A	0x6E1D      	MOVWF       _UART_Rd_Ptr+1 
0x005C	0x0E00      	MOVLW       0
0x005E	0x6E1E      	MOVWF       _UART_Rd_Ptr+2 
0x0060	0x0E00      	MOVLW       0
0x0062	0x6E1F      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67.c,20 :: 		
0x0064	0x0EFF      	MOVLW       _UART1_Data_Ready
0x0066	0x6E18      	MOVWF       _UART_Rdy_Ptr 
0x0068	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x006A	0x6E19      	MOVWF       _UART_Rdy_Ptr+1 
0x006C	0x0E00      	MOVLW       0
0x006E	0x6E1A      	MOVWF       _UART_Rdy_Ptr+2 
0x0070	0x0E00      	MOVLW       0
0x0072	0x6E1B      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67.c,21 :: 		
0x0074	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x0076	0x6E24      	MOVWF       _UART_Tx_Idle_Ptr 
0x0078	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x007A	0x6E25      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x007C	0x0E00      	MOVLW       0
0x007E	0x6E26      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x0080	0x0E00      	MOVLW       0
0x0082	0x6E27      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x0084	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0086	0x0E90      	MOVLW       144
0x0088	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x008A	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x008C	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x008E	0xAA9E      	BTFSS       PIR1, 5 
0x0090	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0092	0xF000CFAE  	MOVFF       RCREG, R0
0x0096	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x0098	0x0012      	RETURN      0
; end of _UART1_Init
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x009A	0xB2AC      	BTFSC       TXSTA, 1 
0x009C	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x009E	0x0000      	NOP
0x00A0	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x00A2	0xFFADC028  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x00A6	0x0012      	RETURN      0
; end of _UART1_Write
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00A8	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00AA	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00AE	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00B0	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00B2	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00B4	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00B6	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00B8	0x6A16      	CLRF        _flag 
0x00BA	0x6A17      	CLRF        _x 
;emisor.c,34 :: 		void main()
;emisor.c,37 :: 		TRISB = 0x10; // (I)ECHO->rb4 : (O)TRIGGER->rb0.
0x00BC	0x0E10      	MOVLW       16
0x00BE	0x6E93      	MOVWF       TRISB 
;emisor.c,38 :: 		TRISC = 0x00; // Pines de C como Output.
0x00C0	0x6A94      	CLRF        TRISC 
;emisor.c,39 :: 		PORTB = 0x00; // Datos en B a 0.
0x00C2	0x6A81      	CLRF        PORTB 
;emisor.c,40 :: 		PORTC = 0x00; // Datos en C a 0.
0x00C4	0x6A82      	CLRF        PORTC 
;emisor.c,43 :: 		x = PORTB; // RBIF exige antes leer PORTB.
0x00C6	0xF017CF81  	MOVFF       PORTB, _x
;emisor.c,44 :: 		INTCON.RBIF = 0; // Flag de activación apagado.
0x00CA	0x90F2      	BCF         INTCON, 0 
;emisor.c,45 :: 		INTCON.RBIE = 1; // Interrupciones en B a low/high.
0x00CC	0x86F2      	BSF         INTCON, 3 
;emisor.c,48 :: 		INTCON.TMR0IF = 0; // Flag de activación apagado.
0x00CE	0x94F2      	BCF         INTCON, 2 
;emisor.c,49 :: 		INTCON.TMR0IE = 1; // Se permite que el timer lance interrupciones.
0x00D0	0x8AF2      	BSF         INTCON, 5 
;emisor.c,52 :: 		RCON.IPEN = 0; // Sin prioridad.
0x00D2	0x9ED0      	BCF         RCON, 7 
;emisor.c,53 :: 		INTCON.PEIE = 0; // Tipo core.
0x00D4	0x9CF2      	BCF         INTCON, 6 
;emisor.c,54 :: 		INTCON.GIE = 1; // Interrupciones globales.
0x00D6	0x8EF2      	BSF         INTCON, 7 
;emisor.c,57 :: 		T0CON = 0x10; // Se apaga el timer.
0x00D8	0x0E10      	MOVLW       16
0x00DA	0x6ED5      	MOVWF       T0CON 
;emisor.c,58 :: 		TMR0H = 0; // Valor high para el alfa del timer.
0x00DC	0x6AD7      	CLRF        TMR0H 
;emisor.c,59 :: 		TMR0L = 0; // Valor low para el alfa del timer.
0x00DE	0x6AD6      	CLRF        TMR0L 
;emisor.c,62 :: 		UART1_Init(9600);
0x00E0	0x0E33      	MOVLW       51
0x00E2	0x6EAF      	MOVWF       SPBRG 
0x00E4	0x84AC      	BSF         TXSTA, 2, 0
0x00E6	0xDFAE      	RCALL       _UART1_Init
;emisor.c,63 :: 		delay_ms(300);
0x00E8	0x0E04      	MOVLW       4
0x00EA	0x6E0B      	MOVWF       R11, 0
0x00EC	0x0E0C      	MOVLW       12
0x00EE	0x6E0C      	MOVWF       R12, 0
0x00F0	0x0E33      	MOVLW       51
0x00F2	0x6E0D      	MOVWF       R13, 0
L_main3:
0x00F4	0x2E0D      	DECFSZ      R13, 1, 0
0x00F6	0xD7FE      	BRA         L_main3
0x00F8	0x2E0C      	DECFSZ      R12, 1, 0
0x00FA	0xD7FC      	BRA         L_main3
0x00FC	0x2E0B      	DECFSZ      R11, 1, 0
0x00FE	0xD7FA      	BRA         L_main3
0x0100	0x0000      	NOP
0x0102	0x0000      	NOP
;emisor.c,66 :: 		while(1)
L_main4:
;emisor.c,68 :: 		PORTB.B0 = 1;
0x0104	0x8081      	BSF         PORTB, 0 
;emisor.c,69 :: 		delay_us(10);
0x0106	0x0E06      	MOVLW       6
0x0108	0x6E0D      	MOVWF       R13, 0
L_main6:
0x010A	0x2E0D      	DECFSZ      R13, 1, 0
0x010C	0xD7FE      	BRA         L_main6
0x010E	0x0000      	NOP
;emisor.c,70 :: 		PORTB.B0 = 0;
0x0110	0x9081      	BCF         PORTB, 0 
;emisor.c,71 :: 		delay_ms(1500);
0x0112	0x0E10      	MOVLW       16
0x0114	0x6E0B      	MOVWF       R11, 0
0x0116	0x0E39      	MOVLW       57
0x0118	0x6E0C      	MOVWF       R12, 0
0x011A	0x0E0D      	MOVLW       13
0x011C	0x6E0D      	MOVWF       R13, 0
L_main7:
0x011E	0x2E0D      	DECFSZ      R13, 1, 0
0x0120	0xD7FE      	BRA         L_main7
0x0122	0x2E0C      	DECFSZ      R12, 1, 0
0x0124	0xD7FC      	BRA         L_main7
0x0126	0x2E0B      	DECFSZ      R11, 1, 0
0x0128	0xD7FA      	BRA         L_main7
0x012A	0x0000      	NOP
0x012C	0x0000      	NOP
;emisor.c,72 :: 		}
0x012E	0xD7EA      	BRA         L_main4
;emisor.c,73 :: 		}
L_end_main:
0x0130	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [60]    _interrupt
0x0044      [86]    _UART1_Init
0x009A      [14]    _UART1_Write
0x00A8      [16]    ___CC2DW
0x00B8     [122]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    MM_Init_i_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _flag
0x0017       [1]    _x
0x0018       [4]    _UART_Rdy_Ptr
0x001C       [4]    _UART_Rd_Ptr
0x0020       [4]    _UART_Wr_Ptr
0x0024       [4]    _UART_Tx_Idle_Ptr
0x0028       [1]    FARG_UART1_Write_data_
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
